---
  - name: Provision an MAVEN Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning

    vars:
      instance_type: t2.micro
      security_group: MySecGroup # Change the security group name here
      image: ami-00399ec92321828f5 # Change the AMI, from which you want to launch the server
      region: us-east-2 # Change the Region
      keypair: FirstKeys # Change the keypair name
      count: 1


    tasks:

      - name: Maven - Launch the new EC2 Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true 
                      region={{ region }} 
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2

      - name: Maven - Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        add_host: hostname={{ item.public_ip }} groupname=maven
        with_items: "{{ ec2.instances }}"


      - name: Maven -  Wait for SSH to come up
        local_action: wait_for 
                      host={{ item.public_ip }} 
                      port=22 
                      state=started
        with_items: "{{ ec2.instances }}"

      - name: Maven - Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: maven

  - name: install Maven
    hosts: maven
    become: yes
    remote_user: ubuntu
    vars:
     - ansible_ssh_private_key_file: /root/aws/aws.pem

    tasks:
     - name: Update apt-get repo and cache
       apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

     - name: Ensure JDK  package is present
       apt:
        name: default-jdk
        state: present

     - name: Enssure Maven  package is present
       apt:
        name: maven
        state: present

     - name: Pull from GIT
       git:
         repo: "https://github.com/daticahealth/java-tomcat-maven-example.git"
         dest: /tmp/src

     - name: Enssure Project is WAR file is present
       shell: "mvn package -f /tmp/src"

     - name: ansible copy file from remote to local.
       fetch:
         src: /tmp/src/target/java-tomcat-maven-example.war
         dest: /tmp/
         flat: yes


  - name: Provision an WEB  Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning

    vars:
      instance_type: t2.micro
      security_group: MySecGroup # Change the security group name here
      image: ami-00399ec92321828f5 # Change the AMI, from which you want to launch the server
      region: us-east-2 # Change the Region
      keypair: FirstKeys # Change the keypair name
      count: 1


    tasks:

      - name: WEB - Launch the new WEB  Instance
        local_action: ec2
                      group={{ security_group }}
                      instance_type={{ instance_type}}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2

      - name: WEB - Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        add_host: hostname={{ item.public_ip }} groupname=web
        with_items: "{{ ec2.instances }}"


      - name: WEB -  Wait for SSH to come up
        local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
        with_items: "{{ ec2.instances }}"

      - name: WEB - Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: web

  - name: install WEB
    hosts: web
    become: yes
    remote_user: ubuntu
    vars:
     - ansible_ssh_private_key_file: /root/aws/aws.pem

    tasks:
     - name: Update apt-get repo and cache
       apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

     - name: Ensure Tomcat  package is present
       apt:
        name: tomcat9
        state: present

     - name: ansible copy file from remote to local.
       copy:
         src: /tmp/java-tomcat-maven-example.war
         dest: /var/lib/tomcat9/webapps
